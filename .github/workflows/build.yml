name: Build and Publish ReSpec Docs

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm install puppeteer

      - name: Check for Imvertor file
        run: |
          if [ ! -f imvertor.respec.html ]; then
            echo "❌ Imvertor file is missing in root!"
            exit 1
          fi
          echo "✅ Imvertor file exists."

      - name: Start HTTP server
        run: |
          python3 -m http.server 8080 --bind 127.0.0.1 &
          for i in {1..20}; do
            if curl -s http://127.0.0.1:8080 > /dev/null; then
              echo "Server ready!"
              break
            else
              echo "Waiting... ($i)"
              sleep 3
            fi
          done

      - name: Generate snapshots with Puppeteer
        run: |
          npx puppeteer browsers install chrome
          node <<'EOF'
          const puppeteer = require('puppeteer');
          const fs = require('fs');

          (async () => {
            const browser = await puppeteer.launch({
              headless: true,
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });

            const page = await browser.newPage();
            console.log('Navigating to local HTML...');
            await page.goto('http://127.0.0.1:8080/index.html', { waitUntil: 'networkidle2' });

            try {
              console.log('Waiting for ReSpec and #imvertor to load...');
              await page.waitForFunction(
                () => {
                  const respecReady = document.respec && document.respec.ready;
                  const imvertor = document.querySelector('#imvertor');
                  const sections = document.querySelectorAll('section').length;
                  const imvertorFilled = imvertor && imvertor.innerHTML.trim().length > 0;
                  return respecReady && imvertorFilled && sections > 3;
                },
                { timeout: 300000 }
              );
              console.log('✅ ReSpec ready and Imvertor loaded.');
              await page.evaluate(() => document.respec && document.respec.flush());
              await page.waitForTimeout(3000); // extra wait for dynamic content
            } catch (err) {
              console.warn('⚠️ ReSpec or Imvertor not fully detected. Generating snapshots anyway.');
            }

            console.log('Generating snapshots...');
            await page.pdf({ path: 'snapshot.pdf', format: 'A4', printBackground: true });
            await page.screenshot({ path: 'snapshot.png', fullPage: true });
            fs.writeFileSync('snapshot.html', await page.content());
            console.log('✅ Snapshots generated.');
            await browser.close();
          })();
          EOF

      - name: Check snapshots
        run: |
          for f in snapshot.html snapshot.pdf snapshot.png; do
            if [ ! -s $f ]; then
              echo "❌ $f is missing or empty!"
              exit 1
            fi
          done
          echo "✅ All snapshots present and non-empty."

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          # optional: clean: true
